datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Roles {
  superAdmin
  admin
  employee
}

enum StatusProduct {
  unavailable
  available
  outOfStock
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  name      String
  password  String
  role      Roles
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token     String?
  categories category[]
  stores    stores[]
  products  products[]
}

model stores {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  stocks    stocks[]
  userId    String @db.ObjectId
  user      users @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  stocksOut stocksOut[]
}

model products {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String   @unique
  description String?
  unit     String // kg, pcs, liter, dll
  status   StatusProduct @default(unavailable) // unavailale, available, out of stock
  categoryId String @db.ObjectId
  category category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId   String @db.ObjectId
  user     users @relation(fields: [userId], references: [id])
  stocks  stocks[]
  stocksOut stocksOut[]
}

model stocks {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  store     stores @relation(fields: [storeId], references: [id])
  product   products @relation(fields: [productId], references: [id])

  @@unique([storeId, productId]) // 1 produk hanya boleh 1 data stok per store
}

model stocksOut {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  description String?
  storeId   String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  store     stores @relation(fields: [storeId], references: [id])
  product   products @relation(fields: [productId], references: [id])

  @@unique([storeId, productId]) // 1 produk hanya boleh 1 data stok per store
}

model category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String @db.ObjectId
  user      users @relation(fields: [userId], references: [id])
  products  products[]
}